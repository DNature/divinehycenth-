(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"0QQ2":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var a=n("wx14"),s=n("Ff2n"),l=n("q1tI"),i=n.n(l),r=n("7ljp"),b=n("BIUn"),p=(n("NO8M"),n("hZ7m")),c=(i.a.createElement,{title:"How to Reduce file sizes with Gulpjs",__filename:"2019-12-16_how-to-reduce-file-sizes-with-gulpjs.md",__url:"pages/blog/2019-12-16_how-to-reduce-file-sizes-with-gulpjs.md",date:"2019-12-16",layout:"bloglayout",description:"Learn how to publish you Next.js app to netlify in minutes.",imageUrl:"/images/blog/how-to-reduce-file-sizes-with-gulpjs/thumbnail.png",tags:["gulp","javascript"]}),o={},u=function(e){var t=e.children;return Object(b.a)(Object.assign({},c,{children:t}))};function m(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(r.b)(u,Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/images/blog/how-to-reduce-file-sizes-with-gulpjs/thumbnail.png",alt:"How to minify file sizes with gulpjs"}))),Object(r.b)("br",null),Object(r.b)("h2",null,"Learn how to automatically minify your files with gulpjs?."),Object(r.b)("h2",null,"Prerequisites"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Make sure you have ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/"}),"NODEJS"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Make sure ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/"}),"NPM")," is installed in your computer"))),Object(r.b)("br",null),Object(r.b)("h2",null,"To start \u2014 what is gulp?"),Object(r.b)("p",null,"Gulp is a JavaScript task runner that lets you automate tasks such as\u2026"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Bundling and minifying libraries and stylesheets."),Object(r.b)("li",{parentName:"ul"},"Refreshing your browser when you save a file."),Object(r.b)("li",{parentName:"ul"},"Quickly running unit tests."),Object(r.b)("li",{parentName:"ul"},"Running code analysis."),Object(r.b)("li",{parentName:"ul"},"And much more!")),Object(r.b)("p",null,"An alternative to Gulp is ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gruntjs.com/"}),"Grunt")),Object(r.b)("br",null),Object(r.b)("p",null,"We can create tasks that we would like to fulfill. In these tasks we load files that we want gulp to work on (modifying or not), then we return them to some return folder."),Object(r.b)("br",null),Object(r.b)("p",null,"Setting up Gulp is simple compared to Grunt."),Object(r.b)("br",null),Object(r.b)("p",null,"In this little tutorial, I will teach you how to create a task to minify all CSS files in your folder. Then put the minified ones in another folder."),Object(r.b)("br",null),Object(r.b)("h2",null,"Let\u2019s start \ud83d\ude80"),Object(r.b)("p",null,"Our project structure \ud83d\udc47"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"\u251c\u2500\u2500 css/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 images/\n\u251c\u2500\u2500 js/\n\u251c\u2500\u2500 gulpfile.js\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 package.json\n")),Object(r.b)("p",null,"First thing is to install ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gulpjs.com/"}),"gulp-cli")," globally by running:"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm install gulp-cli -g\n")),Object(r.b)("p",null,"Next step is to initialize our project with npm by running:"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm init -y\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"I'm using the ",Object(r.b)("em",{parentName:"p"},"-y")," flag to skip all the prompts")),Object(r.b)("p",null,"We will create a ",Object(r.b)("strong",{parentName:"p"},"gulpfile.js")," by running:"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npx -p touch nodetouch gulpfile.js\n")),Object(r.b)("p",null,"There are tons of ",Object(r.b)("strong",{parentName:"p"},"open source plugins")," for almost every task in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://gulpjs.com/plugins/"}),"official gulpjs website")," however, we are going to consider some plugins for"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/package/gulp-imagemin/"}),"Minifying images")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/package/gulp-clean-css/"}),"Uglify our CSS files")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.npmjs.com/package/gulp-uglify/"}),"Uglify our JS files")),Object(r.b)("li",{parentName:"ul"},"and much more...")),Object(r.b)("p",null,"First lets work on ",Object(r.b)("strong",{parentName:"p"},"Images.")),Object(r.b)("br",null),Object(r.b)("p",null,"I am going to use an uncompressed version of my profile photo for this demo which is about ",Object(r.b)("em",{parentName:"p"},"1.4mb")," so that we can know how useful it is to compress our images without loosing its quality and details."),Object(r.b)("br",null),Object(r.b)("p",null,"The first step is to install the plugins we wish to use."),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm i -D gulp-imagemin\n")),Object(r.b)("h2",null,"In Gulpfile.js"),Object(r.b)("p",null,"Add the following code to the ",Object(r.b)("strong",{parentName:"p"},"gulpfile.js")," file we created earlier."),Object(r.b)(p.a,{lang:"gulpfile.js",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const { src, dest } = require("gulp");\nconst imagemin = require("gulp-imagemin");\n\nfunction minifyImages() {\n  return src(["./images/**/*"]).pipe(imagemin()).pipe(dest("dist/images"));\n}\n\nexports.minifyImages = minifyImages;\n')),Object(r.b)("p",null,"First of all we ",Object(r.b)("strong",{parentName:"p"},"require")," our ",Object(r.b)("strong",{parentName:"p"},"plugins")," then we create a function and call it ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"minifyImages")),". This function return a ",Object(r.b)("strong",{parentName:"p"},"gulp task")," that maps through everything in our ",Object(r.b)("strong",{parentName:"p"},"/images")," directory, then we call our ",Object(r.b)("strong",{parentName:"p"},"imagemin()")," function that we got from the plugin we imported. next we specify our output directory in the ",Object(r.b)("strong",{parentName:"p"},"dest"),"().\nFinally we export our function."),Object(r.b)("p",null,"You might be wondering \u2014 you\u2019re already able to minify your files? Yes, by executing the gulp command in the terminal followed by the task name."),Object(r.b)("br",null),Object(r.b)("p",null,"We can view all available tasks we have written by executing the following command:"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"gulp --tasks\n")),Object(r.b)("br",null),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/images/blog/how-to-reduce-file-sizes-with-gulpjs/gulp-tasks.gif",alt:"gulp tasks"}))),Object(r.b)("br",null),Object(r.b)("p",null,"The only defined task in our gulpfile is the ",Object(r.b)("em",{parentName:"p"},Object(r.b)("strong",{parentName:"em"},"minifyImages"))," task so if we execute"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"gulp minifyImages\n")),Object(r.b)("p",null,"It is going to create a new folder called ",Object(r.b)("strong",{parentName:"p"},"/dist/images")," and put all our files as we specified in the ",Object(r.b)("strong",{parentName:"p"},"dest.")),Object(r.b)("p",null,"If you compare the size of our original image to the minified version you will see a big difference because our minified image is ",Object(r.b)("strong",{parentName:"p"},"490kb")," while our original image is ",Object(r.b)("strong",{parentName:"p"},"1.40mb.")," Thats awesome right?."),Object(r.b)("h2",null,"Minify CSS files"),Object(r.b)("p",null,"The next thing we are going to checkout is how to minify ",Object(r.b)("strong",{parentName:"p"},"CSS")," files?."),Object(r.b)("p",null,"The steps are pretty much the same."),Object(r.b)("p",null,"We will start off by installing ",Object(r.b)("strong",{parentName:"p"},"gulp-clean-css")," plugin"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm i -D gulp-clean-css\n")),Object(r.b)("p",null,"Next we will require our plugin and add a function that will minify our ",Object(r.b)("strong",{parentName:"p"},"CSS")," files."),Object(r.b)(p.a,{lang:"gulpfile.js",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const { src, dest } = require("gulp");\nconst imagemin = require("gulp-imagemin");\nconst cleancss = require("gulp-clean-css");\n\nfunction minifyImages() {\n  return src(["./images/**/*"]).pipe(imagemin()).pipe(dest("dist/images"));\n}\n\nfunction minifyCss() {\n  return src(["css/**/*.css"]).pipe(cleancss()).pipe(dest("dist/css"));\n}\n\nexports.minifyCss = minifyCss;\nexports.minifyImages = minifyImages;\n')),Object(r.b)("p",null,"Then we can minify our css files by running:"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"gulp minifyCss\n")),Object(r.b)("p",null,"To minify your javascript files your code should look like:"),Object(r.b)(p.a,{lang:"gulpfile.js",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const { src, dest } = require("gulp");\nconst imagemin = require("gulp-imagemin");\nconst cleancss = require("gulp-clean-css");\nconst javascript = require("gulp-uglify");\n\nfunction minifyImages() {\n  return src(["./images/**/*"]).pipe(imagemin()).pipe(dest("dist/images"));\n}\n\nfunction minifyCss() {\n  return src(["css/**/*.css"]).pipe(cleancss()).pipe(dest("dist/css"));\n}\n\nfunction minifyJS() {\n  return src(["js/**/*.js"]).pipe(javascript()).pipe(dest("dist/js"));\n}\n\nexports.minifyCss = minifyCss;\nexports.minifyImages = minifyImages;\nexports.minifyJS = minifyJS;\n')),Object(r.b)("p",null,"Gulp provides us with a method called ",Object(r.b)("strong",{parentName:"p"},"series() & parallel()")),Object(r.b)("h2",null,"series()"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Combines task functions and/or composed operations into larger operations that will be executed one after another, in sequential order. There are no imposed limits on the nesting depth of composed operations using series() and parallel().")),Object(r.b)("p",null,"Lets enhance our DX by applying the series method."),Object(r.b)("br",null),Object(r.b)("p",null,"Your code should look like:"),Object(r.b)(p.a,{lang:"gulpfile.js",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const { src, dest, task, series } = require("gulp");\nconst imagemin = require("gulp-imagemin");\nconst cleancss = require("gulp-clean-css");\nconst javascript = require("gulp-uglify");\n\nfunction minifyImages() {\n  return src(["./images/**/*"]).pipe(imagemin()).pipe(dest("dist/images"));\n}\n\nfunction minifyCss() {\n  return src(["css/**/*.css"]).pipe(cleancss()).pipe(dest("dist/css"));\n}\n\nfunction minifyJS() {\n  return src(["js/**/*.js"]).pipe(javascript()).pipe(dest("dist/js"));\n}\n\nexports.minifyCss = minifyCss;\nexports.minifyImages = minifyImages;\nexports.minifyJS = minifyJS;\n\ntask("start", series(minifyCss, minifyImages, minifyJS));\n')),Object(r.b)("p",null,"Now you can execute all your gulp tasks with one command"),Object(r.b)(p.a,{lang:"bash",mdxType:"CodeWrapper"}),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"gulp start\n")),Object(r.b)("h2",null,"Conclusion"),Object(r.b)("p",null,"This is just a small way that gulp can help us in the development of our applications."),Object(r.b)("br",null),Object(r.b)("p",null,"You can find the code for this project in ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/DNature/gulpjs"}),"this repository")," on GitHub."),Object(r.b)("br",null),Object(r.b)("p",null,"Thank you for reading, please feel free to ? and help others find it."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"See you soon. ?")))}m.isMDXComponent=!0},yyly:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2019-12-16_how-to-reduce-file-sizes-with-gulpjs",function(){return n("0QQ2")}])}},[["yyly",0,2,1,3,4,5]]]);